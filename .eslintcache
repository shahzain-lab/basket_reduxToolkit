[{"C:\\Users\\home\\Downloads\\React_Repos\\ReactRedux\\shopping-basket\\src\\index.tsx":"1","C:\\Users\\home\\Downloads\\React_Repos\\ReactRedux\\shopping-basket\\src\\App.tsx":"2","C:\\Users\\home\\Downloads\\React_Repos\\ReactRedux\\shopping-basket\\src\\store\\index.tsx":"3","C:\\Users\\home\\Downloads\\React_Repos\\ReactRedux\\shopping-basket\\src\\store\\state.tsx":"4","C:\\Users\\home\\Downloads\\React_Repos\\ReactRedux\\shopping-basket\\src\\components\\index.tsx":"5","C:\\Users\\home\\Downloads\\React_Repos\\ReactRedux\\shopping-basket\\src\\components\\Product.tsx":"6","C:\\Users\\home\\Downloads\\React_Repos\\ReactRedux\\shopping-basket\\src\\components\\productCart.tsx":"7"},{"size":358,"mtime":1607260963963,"results":"8","hashOfConfig":"9"},{"size":312,"mtime":1607284866296,"results":"10","hashOfConfig":"9"},{"size":983,"mtime":1607261733753,"results":"11","hashOfConfig":"9"},{"size":677,"mtime":1607263411732,"results":"12","hashOfConfig":"9"},{"size":77,"mtime":1607260515701,"results":"13","hashOfConfig":"9"},{"size":3415,"mtime":1607262990173,"results":"14","hashOfConfig":"9"},{"size":3416,"mtime":1607260930043,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"yjdlu6",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"C:\\Users\\home\\Downloads\\React_Repos\\ReactRedux\\shopping-basket\\src\\index.tsx",[],["33","34"],"C:\\Users\\home\\Downloads\\React_Repos\\ReactRedux\\shopping-basket\\src\\App.tsx",[],"C:\\Users\\home\\Downloads\\React_Repos\\ReactRedux\\shopping-basket\\src\\store\\index.tsx",["35"],"import {createSlice , configureStore} from '@reduxjs/toolkit';\r\nimport {INITIAL_STATE} from './state';\r\n\r\n\r\nconst basketSlice = createSlice({\r\n    name: 'basket',\r\n    initialState: INITIAL_STATE,\r\n    reducers: {\r\n        add: (state,action) => {\r\n            return state.map(item => {\r\n                if(item.id != action.payload.id) {\r\n                    return item\r\n                }\r\n                return {\r\n                    ...item,\r\n                    added: true,\r\n                }\r\n            })\r\n        },\r\n        remove: (state,action) => {\r\n            return state.map(item => {\r\n             if(item.id !== action.payload.id) {\r\n                 return item\r\n             }\r\n             return{\r\n                 ...item,\r\n                 added: false\r\n             }\r\n            })\r\n        }\r\n    }\r\n})\r\n\r\nconst store = configureStore({reducer: basketSlice.reducer})\r\n\r\nexport const {add, remove} = basketSlice.actions\r\n\r\nexport {basketSlice,store}\r\n","C:\\Users\\home\\Downloads\\React_Repos\\ReactRedux\\shopping-basket\\src\\store\\state.tsx",[],"C:\\Users\\home\\Downloads\\React_Repos\\ReactRedux\\shopping-basket\\src\\components\\index.tsx",[],"C:\\Users\\home\\Downloads\\React_Repos\\ReactRedux\\shopping-basket\\src\\components\\Product.tsx",[],"C:\\Users\\home\\Downloads\\React_Repos\\ReactRedux\\shopping-basket\\src\\components\\productCart.tsx",["36"],"import React, { Fragment } from 'react';\r\n/////useSelector\r\n\r\nimport {useSelector} from 'react-redux';\r\n///material ui\r\nimport {createStyles , Theme , makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    List,\r\n    ListItem,\r\n    Divider,\r\n    ListItemText,\r\n    ListItemAvatar,\r\n    ListItemSecondaryAction,\r\n    IconButton,\r\n    Avatar,\r\n    Typography\r\n  } from \"@material-ui/core\";\r\n///// material ui icons  \r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n///typescript types\r\nimport { ProductItem } from \"../global.d\";\r\n///redux store\r\nimport { store, remove } from '../store/';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      backgroundColor: theme.palette.background.paper\r\n    },\r\n    inline: {\r\n      display: \"inline\"\r\n    },\r\n    listItem: {\r\n      padding: theme.spacing(1, 0),\r\n      justifyContent: \"flex-end\"\r\n    },\r\n    total: {\r\n      fontWeight: theme.typography.fontWeightBold,\r\n      fontSize: theme.typography.fontSize * 2\r\n    }\r\n  })\r\n)\r\n\r\n\r\nexport const ProductCart = () => {\r\n    const classes = useStyles({})\r\n    const products = useSelector((state: ProductItem[]) => state)\r\n\r\n    return(\r\n        <div>\r\n             <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n        Shopping Basket\r\n      </Typography>\r\n      <Typography component=\"p\" variant=\"body1\">\r\n        You have {products.filter(product => product.added).length} items in your basket\r\n      </Typography>\r\n      <List className={classes.root}>\r\n        {products\r\n          .filter(product => product.added)\r\n          .map((product: ProductItem) => (\r\n            <React.Fragment key={product.id}>\r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemAvatar>\r\n                  <Avatar alt=\"Product\" src={product.imageUrl} />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={product.title}\r\n                  secondary={\r\n                    <React.Fragment>\r\n                      <Typography\r\n                        component=\"span\"\r\n                        variant=\"body2\"\r\n                        className={classes.inline}\r\n                        color=\"textPrimary\"\r\n                      >\r\n                        &pound;{(product.price / 100).toFixed(2)}\r\n                      </Typography>\r\n                      {` â€” ${product.description}`}\r\n                    </React.Fragment>\r\n                  }\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <IconButton\r\n                    edge=\"end\"\r\n                    aria-label=\"delete\"\r\n                    onClick={() => store.dispatch(remove({ id: product.id }))}\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </React.Fragment>\r\n          ))}\r\n        <ListItem className={classes.listItem}>\r\n          <Typography variant=\"subtitle1\" className={classes.total}>\r\n            &pound;\r\n            {(\r\n              products\r\n                .filter(product => product.added)\r\n                .reduce((acc, current) => (acc += current.price), 0) / 100\r\n            ).toFixed(2)}\r\n          </Typography>\r\n        </ListItem>\r\n      </List>\r\n        </div>\r\n    )\r\n}  ",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":11,"column":28,"nodeType":"43","messageId":"44","endLine":11,"endColumn":30},{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]